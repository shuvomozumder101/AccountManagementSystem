@page
@model AccountManagementSystem.Pages.Vouchers.IndexModel
@{
    ViewData["Title"] = "Voucher List";
}

<div class="container">
    <h1>@ViewData["Title"]</h1>

    <div class="row mb-3">
        <div class="col-md-12">
            <a asp-page="CreateJournal" class="btn btn-info me-2">Create Journal Voucher</a>
            <a asp-page="CreatePayment" class="btn btn-info me-2">Create Payment Voucher</a>
            <a asp-page="CreateReceipt" class="btn btn-info">Create Receipt Voucher</a>
        </div>
    </div>

    @if (Model.StatusMessage != null)
    {
        <div class="alert alert-info">@Model.StatusMessage</div>
    }
    @if (Model.ErrorMessage != null)
    {
        <div class="alert alert-danger">@Model.ErrorMessage</div>
    }

    <div class="card mt-4">
        <div class="card-header bg-light">
            <h4>Filter Vouchers</h4>
        </div>
        <div class="card-body">
            <form method="get" asp-page-handler="Filter">
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label asp-for="FilterVoucherType" class="form-label">Voucher Type</label>
                        <select asp-for="FilterVoucherType" class="form-control">
                            <option value="">All</option>
                            <option value="Journal">Journal</option>
                            <option value="Payment">Payment</option>
                            <option value="Receipt">Receipt</option>
                        </select>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label asp-for="StartDate" class="form-label">Start Date</label>
                        <input asp-for="StartDate" type="date" class="form-control" />
                    </div>
                    <div class="col-md-4 mb-3">
                        <label asp-for="EndDate" class="form-label">End Date</label>
                        <input asp-for="EndDate" type="date" class="form-control" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 text-end">
                        <button type="submit" class="btn btn-primary">Apply Filter</button>
                        <a asp-page="Index" class="btn btn-secondary">Clear Filter</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <table class="table table-striped table-hover mt-3">
        <thead>
            <tr>
                <th>Voucher ID</th>
                <th>Type</th>
                <th>Date</th>
                <th>Reference No.</th>
                <th>Description</th>
                <th>Created By</th>
                <th>Total Debit</th>
                <th>Total Credit</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Vouchers.Any())
            {
                @foreach (var voucher in Model.Vouchers)
                {
                    <tr>
                        <td>@voucher.VoucherId</td>
                        <td>@voucher.VoucherType</td>
                        <td>@voucher.VoucherDate.ToString("yyyy-MM-dd")</td>
                        <td>@voucher.ReferenceNo</td>
                        <td>@voucher.Description</td>
                        <td>@voucher.CreatedBy</td>
                        <td>@voucher.TotalDebit.ToString("N2")</td>
                        <td>@voucher.TotalCredit.ToString("N2")</td>
                        <td>
                            <button type="button" class="btn btn-sm btn-info view-details-btn" data-bs-toggle="modal" data-bs-target="#voucherDetailsModal" data-voucher-id="@voucher.VoucherId">
                                View Details
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="9" class="text-center">No vouchers found.</td></tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="voucherDetailsModal" tabindex="-1" aria-labelledby="voucherDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="voucherDetailsModalLabel">Voucher Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalVoucherDetailsBody">
                <!-- Voucher details will be loaded here via JavaScript -->
                Loading...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var voucherDetailsModal = document.getElementById('voucherDetailsModal');
            voucherDetailsModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget; // Button that triggered the modal
                var voucherId = button.getAttribute('data-voucher-id'); // Extract info from data-* attributes

                var modalBody = voucherDetailsModal.querySelector('#modalVoucherDetailsBody');
                modalBody.innerHTML = 'Loading...'; // Show loading message

                // Fetch voucher details using AJAX
                fetch(`/Vouchers?handler=VoucherDetails&id=${voucherId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data && data.details) {
                            let detailsHtml = `
                                <h5>Voucher Info:</h5>
                                <p><strong>Type:</strong> ${data.voucherType}</p>
                                <p><strong>Date:</strong> ${new Date(data.voucherDate).toLocaleDateString()}</p>
                                <p><strong>Reference No:</strong> ${data.referenceNo}</p>
                                <p><strong>Description:</strong> ${data.description || 'N/A'}</p>
                                <hr>
                                <h5>Detail Entries:</h5>
                                <table class="table table-bordered table-sm">
                                    <thead>
                                        <tr>
                                            <th>Account</th>
                                            <th>Debit</th>
                                            <th>Credit</th>
                                            <th>Narration</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                            `;
                            data.details.forEach(detail => {
                                detailsHtml += `
                                    <tr>
                                        <td>${detail.accountCode} - ${detail.accountName}</td>
                                        <td>${detail.debitAmount.toFixed(2)}</td>
                                        <td>${detail.creditAmount.toFixed(2)}</td>
                                        <td>${detail.narration || 'N/A'}</td>
                                    </tr>
                                `;
                            });
                            detailsHtml += `
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th>Total:</th>
                                            <th>${data.totalDebit.toFixed(2)}</th>
                                            <th>${data.totalCredit.toFixed(2)}</th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            `;
                            modalBody.innerHTML = detailsHtml;
                        } else {
                            modalBody.innerHTML = '<p>No details found for this voucher.</p>';
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching voucher details:', error);
                        modalBody.innerHTML = '<p class="text-danger">Failed to load voucher details. Please try again.</p>';
                    });
            });
        });
    </script>
}
